{"version":3,"file":"static/js/520.7e0030e5.chunk.js","mappings":"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","sources":["api/api-service.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48978cb53ccabb273ee7577d68beda02';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = () => {\n  const response = axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const fetchMoviesByName = searchValue => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesById = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchCast = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchReviews = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: calc(-1 * 16px);\n  margin-bottom: calc(-1 * 32px);\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 3 - 16px);\n  margin-bottom: 52px;\n  margin-right: 16px;\n  max-width: 200px;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  margin: 8px 0;\n  color: #000;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { List, Item, Image, Title, ItemLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, original_name, poster_path }) => {\n        const poster = () => {\n          if (poster_path) {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n          } else {\n            return `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n          }\n        };\n        return (\n          <Item key={id}>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n              <Image src={poster()} alt={original_name} />\n              <Title>{title ?? original_name}</Title>\n            </ItemLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  width: 1440px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 32px;\n  font-weight: 600;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  position: relative;\n  width: 380px;\n  margin: 30px auto;\n`;\n\nexport const Input = styled.input`\n  padding: 0 14px 4px 0;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  display: flex;\n  align-items: center;\n  width: 380px;\n  height: 30px;\n  background-color: transparent;\n  outline-color: transparent;\n  border: none;\n  border-bottom: 1px solid #000;\n  color: #000;\n  outline: 0 none;\n  outline-offset: 0;\n  &:focus,\n  &:hover {\n    border: transparent;\n    border-bottom: 1px solid #ff6b08;\n  }\n  &::placeholder {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  justify-content: end;\n  text-align: center;\n  width: 40px;\n  height: 40px;\n  right: -8px;\n  bottom: -4px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    color: #000;\n    opacity: 1;\n  }\n`;\n","// import { useState } from 'react';\n// import { toast } from 'react-toastify';\n// import { ImSearch } from 'react-icons/im';\n// import PropTypes from 'prop-types';\n\n// import { Form, Input, Button } from './SearchForm.styled';\n\n// export const SearchForm = ({ onSubmit }) => {\n//   const [searchValue, setSearchValue] = useState('');\n\n//   const hendelChange = evt => {\n//     setSearchValue(evt.currentTarget.value);\n//   };\n\n//   const hendelSubmit = evt => {\n//     evt.preventDefault();\n\n//     if (searchValue.trim() === '') {\n//       toast.warn('Sorry, you need to enter a movie title.');\n//       return;\n//     } else if (searchValue === '') onSubmit(searchValue);\n//     setSearchValue('');\n//   };\n\n//   return (\n//     <Form onSubmit={hendelSubmit}>\n//       <Input\n//         type=\"text\"\n//         placeholder=\"Search movie\"\n//         value={searchValue}\n//         onChange={hendelChange}\n//       />\n//       <Button type=\"submit\">\n//         <ImSearch />\n//       </Button>\n//     </Form>\n//   );\n// };\n\n// SearchForm.propTypes = {\n//   onSubmit: PropTypes.func,\n// };\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesByName } from '../../api/api-service';\n\nimport { Form, Input, Button } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const hendelChange = evt => {\n    setSearchValue(evt.currentTarget.value);\n  };\n\n  const hendelSubmit = async evt => {\n    evt.preventDefault();\n\n    if (searchValue.trim() === '') {\n      toast.warn('Sorry, you need to enter a movie title.');\n      return;\n    } else if (searchValue === '') {\n      onSubmit(searchValue);\n      setSearchValue('');\n    } else {\n      try {\n        const response = await fetchMoviesByName(searchValue);\n        const results = response.data.results;\n        if (results.length === 0) {\n          toast.error('No results found.');\n        } else {\n          onSubmit(searchValue);\n          setSearchValue('');\n        }\n      } catch (error) {\n        console.error('Error during search:', error);\n        toast.error(\n          'An error occurred while searching. Please try again later.'\n        );\n      }\n    }\n  };\n\n  return (\n    <Form onSubmit={hendelSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search movie\"\n        value={searchValue}\n        onChange={hendelChange}\n      />\n      <Button type=\"submit\">\n        <ImSearch />\n      </Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport * as API from '../../api/api-service';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Main } from '../Home/Home.styled';\n\nexport default function Movies() {\n  const [, setSearchValue] = useState('');\n  const [moviesByName, setMoviesByName] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(null);\n\n  const hendelSearchForm = searchValue => {\n    setSearchValue(searchValue);\n    setSearchParams({ query: searchValue });\n  };\n\n  useEffect(() => {\n    const value = searchParams.get('query');\n    if (!value) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    API.fetchMoviesByName(value)\n      .then(({ data }) => {\n        setMoviesByName(data.results);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n  }, [searchParams]);\n\n  return (\n    <Main>\n      <SearchForm onSubmit={hendelSearchForm} />\n      {isLoading && <Loader />}\n\n      <MoviesList movies={moviesByName} />\n    </Main>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","fetchMoviesByName","searchValue","fetchMoviesById","movieId","fetchCast","fetchReviews","List","styled","Item","Image","Title","ItemLink","Link","MoviesList","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","alt","Main","Form","Input","Button","SearchForm","onSubmit","useState","setSearchValue","hendelSubmit","evt","preventDefault","trim","toast","response","data","results","length","console","error","type","placeholder","value","onChange","currentTarget","Movies","moviesByName","setMoviesByName","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","useEffect","get","API","then","catch","message","query","Loader"],"sourceRoot":""}