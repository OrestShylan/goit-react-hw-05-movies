{"version":3,"file":"static/js/544.016c3a56.chunk.js","mappings":"qRAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAsB,WAEjC,OADiBD,EAAAA,EAAAA,IAAA,oCAAuCD,GAEzD,EAEYG,EAAoB,SAAAC,GAI/B,OAHiBH,EAAAA,EAAAA,IAAA,gCACUD,EADV,kBAC2BI,EAD3B,8CAIlB,EAEYC,EAAkB,SAAAC,GAI7B,OAHiBL,EAAAA,EAAAA,IAAA,iBACLK,EADK,oBACcN,EADd,mBAIlB,EAEYO,EAAY,SAAAD,GAIvB,OAHiBL,EAAAA,EAAAA,IAAA,iBACLK,EADK,4BACsBN,EADtB,mBAIlB,EAEYQ,EAAe,SAAAF,GAI1B,OAHiBL,EAAAA,EAAAA,IAAA,iBACLK,EADK,4BACsBN,EADtB,mBAIlB,C,4GCjCYS,EAAOC,EAAAA,GAAAA,GAAH,wJAQJC,EAAOD,EAAAA,GAAAA,GAAH,4SAYJE,EAAQF,EAAAA,GAAAA,IAAH,sGAOLG,EAAQH,EAAAA,GAAAA,EAAH,0MAWLI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kD,SCrCRM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAQvC,OACE,SAACb,EAAD,WACE,UAACG,EAAD,CAAUW,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA9C,WACE,SAACN,EAAD,CAAOgB,IATPJ,EACI,kCAAN,OAAyCA,GAEnC,sGAMkBK,IAAKN,KAC3B,SAACV,EAAD,iBAAQS,QAAR,IAAQA,EAAAA,EAASC,QAHVF,EAOd,KAGN,C,6ICtBc,SAASS,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACbE,EAAAA,KACGC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAkBM,EAAKC,SACvBL,GAAa,EACd,IACAM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,KAGD,UAAC,IAAD,YACE,SAAC,IAAD,oCACCR,IAAa,SAAC,IAAD,KACd,SAAC,IAAD,CAAYjB,OAAQe,MAGzB,C,yGC3BYa,EAAOnC,EAAAA,GAAAA,IAAH,sIAQJG,EAAQH,EAAAA,GAAAA,GAAH,8F","sources":["api/api-service.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48978cb53ccabb273ee7577d68beda02';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = () => {\n  const response = axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const fetchMoviesByName = searchValue => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesById = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchCast = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchReviews = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: calc(-1 * 16px);\n  margin-bottom: calc(-1 * 32px);\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 3 - 16px);\n  margin-bottom: 52px;\n  margin-right: 16px;\n  max-width: 200px;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  margin: 8px 0;\n  color: #000;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { List, Item, Image, Title, ItemLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, original_name, poster_path }) => {\n        const poster = () => {\n          if (poster_path) {\n            return `https://image.tmdb.org/t/p/w500${poster_path}`;\n          } else {\n            return `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n          }\n        };\n        return (\n          <Item key={id}>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n              <Image src={poster()} alt={original_name} />\n              <Title>{title ?? original_name}</Title>\n            </ItemLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import * as API from '../../api/api-service';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, Title } from './Home.styled';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.fetchTrendingMovies()\n      .then(({ data }) => {\n        setTrendingMovies(data.results);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Main>\n      <Title>Trending Movies Today</Title>\n      {isLoading && <Loader />}\n      <MoviesList movies={trendingMovies} />\n    </Main>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  width: 1440px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 32px;\n  font-weight: 600;\n`;\n"],"names":["API_KEY","axios","fetchTrendingMovies","fetchMoviesByName","searchValue","fetchMoviesById","movieId","fetchCast","fetchReviews","List","styled","Item","Image","Title","ItemLink","Link","MoviesList","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","alt","Home","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","API","then","data","results","catch","error","console","log","Main"],"sourceRoot":""}